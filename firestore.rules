rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  match /users/{uid} {
      allow read: if request.auth != null && uid == request.auth.uid;
      allow write: if request.auth != null && request.auth.token && request.auth.uid == 'phqzBtX2XMW1VEnpSZwYuJ7swHH3';
  }
    match /accessRequests/{accessRequest} {
      allow create: if request.auth != null;
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == 'phqzBtX2XMW1VEnpSZwYuJ7swHH3';
    }
    match /districts/wardList {
    	allow read: if request.auth != null;
    	allow write: if request.auth != null && request.auth.uid == 'phqzBtX2XMW1VEnpSZwYuJ7swHH3';
    }
    match /districts/{ward} {
    	allow read: if request.auth != null;
    	allow write: if isEditor(ward, request.auth.uid) || request.auth.uid == 'phqzBtX2XMW1VEnpSZwYuJ7swHH3';

      match /{subCollection}/{document} {
        allow create:  if request.auth != null && request.auth.token && request.auth.uid == 'phqzBtX2XMW1VEnpSZwYuJ7swHH3';
  	  	allow read: if isViewerOrEditor(ward, request.auth.uid);
        allow write: if isEditor(ward, request.auth.uid) || request.auth.uid == 'phqzBtX2XMW1VEnpSZwYuJ7swHH3';
    }
  }
 }

  function getRole(ward, uid) {
    let doc = get(/databases/(default)/documents/districts/$(ward));
    return doc != null && doc.data.users != null && doc.data.users[uid] != null
      ? doc.data.users[uid].role
      : null;
  }

  // Function to check if user is a Viewer or Editor
  function isViewerOrEditor(ward, uid) {
    let role = getRole(ward, uid);
    return role == 'viewer' || role == 'editor';
  }

  // Function to check if user is an Editor
  function isEditor(ward, uid) {
    return getRole(ward, uid) == 'editor';
  }

}

